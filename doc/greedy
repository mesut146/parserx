//greedy prefix

A: B* a;
B: a b;

A: a | B+ a;
A: a (a(a) | B(a) B* a);

//greedy prefix
E: A B;
A: a? b?;
B: a;
E: B | A_noe B;
A_noe: a b? | b;
E: a (B(a) | A_noe(a) B) | A_noe_no_a B;
A_noe(a): a(a) b?;
A_noe_no_a: b;

//greedy prefix loop
E: A B;
//A has a* and tail of a* can be empty
A: a* b?;
B: a | c;
E: B | A_noe B;
A_noe: a+ b? | b;
E: a (B(a) | A_noe(a) B);
A_noe(a): a(a) a* b?;
E: a (B(a) | E) | B_no_a;

//by pull loop
A: a* b? | a d;
E: a+ A(a+) B | A_nop_a B;
A(a+): a+(a+) b?;
A_nop_a: a d;
