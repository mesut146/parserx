package mesut.parserx.parser;

import java.io.*;
import java.util.*;

public class Lexer {
    static String cMapPacked = "\142\142\4\156\156\5\146\146\2\162\162\1\72\72\40\76\76\43\136\136\50\52\52\42\56\56\45\42\42\44\12\12\107\46\46\72\152\152\26\172\172\24\176\176\41\166\167\33\116\132\32\16\37\100\133\133\47\137\137\0"+
            "\73\73\46\77\77\57\53\53\53\57\57\54\47\47\52\43\43\63\143\143\6\157\157\7\163\163\10\173\173\74\153\153\11\147\147\15\13\14\102\140\140\60\74\74\55\100\100\70\134\134\106\54\54\67\40\40\62\44\44\71"+
            "\50\50\65\164\164\12\144\144\14\154\154\17\150\150\23\160\160\21\170\170\22\174\174\76\0\10\77\60\71\35\u03b6\uffff\101\177\u03b4\103\135\134\36\145\145\13\115\115\31\11\11\37\15\15\104\75\75\56\51\51\64\45\45\73"+
            "\55\55\66\41\41\61\141\141\3\135\135\105\171\171\25\u03b5\u03b5\51\175\175\75\165\165\30\161\161\20\151\151\27\155\155\16\101\114\34";
    //input -> input id
    static int[] cMap = unpackCMap(cMapPacked);
    //input id -> regex string for error reporting
    static String[] cMapRegex = {"_", "r", "f", "a", "b", "n", "c", "o", "s", "k", "t", "e", "d", "g", "m", "l", "q", "p", "x", "h", "z", "y", "j", "i", "u", "M", "N-Z", "v-w", "A-L", "0-9", "]-\\", "\\t", ":", "~", "*", ">", "\"", ".", ";", "[", "^", "\\u03b5", "'", "+", "/", "<", "=", "?", "`", "!", "\\u0020", "#", ")", "(", "-", ",", "@", "$", "&", "%", "{", "}", "|", "\\u0000-\\b", "\\u000e-\\u001f", "\\u03b6-\\uffff", "\\u000b-\\f", "\\u007f-\\u03b4", "\\r", "]", "\\\\", "\\n"};
    int[] skip = {0,270};
    int[] accepting = {-88604680,958595059,2130904056,-673120764,3032611};
    //acc state -> new mode_state
    int[] mode_map = {0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1};
    //id -> token name
    static String[] names = {"EOF","BOOLEAN","OPTIONS","TOKEN","INCLUDE","START","EPSILON","LEFT","RIGHT","IDENT","CALL_BEGIN","SHORTCUT","BRACKET","STRING","CHAR","NUMBER","LP","RP","LBRACE","RBRACE",
"STAR","PLUS","QUES","SEPARATOR","TILDE","HASH","COMMA","OR","DOT","SEMI","ARROW","EQ","MINUS","LINE_COMMENT","BLOCK_COMMENT","WS","ACTION_REF","ACTION_TOKEN","ACTION","LEXER_MEMBERS_BEGIN",
"WS1","LEXER_MEMBER","MEMBERS_END"};
    //state->token id
    static int[] ids = {0,0,0,40,42,40,41,9,9,9,9,9,9,9,15,35,23,24,20,0,28,
            29,0,6,0,21,0,31,22,25,17,16,32,26,0,0,18,19,27,9,10,
            9,9,9,9,9,9,9,0,13,0,0,0,12,0,0,14,0,0,33,30,
            36,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,33,
            36,0,0,0,0,0,0,9,9,9,1,9,9,9,0,0,0,34,0,0,
            0,0,0,0,1,9,9,3,9,9,11,0,0,0,0,0,7,37,9,9,
            9,8,0,5,0,6,2,9,4,0,0,0,9,0,0,0,6,9,0,0,
            0,9,0,0,9,38,9,0,39};
    static final int member_mode = 1;
    static final int DEFAULT = 0;

    static final int EOF = 0;
    Reader reader;
    int yypos = 0;//pos in file
    int yyline = 1;
    int yychar;
    public static int bufSize = 100;
    int bufPos = 0;//pos in buffer
    int bufStart = bufPos;
    char[] yybuf = new char[bufSize];
    static String trans_packed = "\110" +
        "\71\0\7\1\7\2\10\3\11\4\7\5\7\6\7\7\12\10\7\11\7\12\13\13\7\14\7\15\7\16\7\17\14\20\7\21\7\22\7\23\7\24\7\25\7\26\7\27\15\30\7\31\7\32\7\33\7\34\7\35\16\37\17\40\20\41\21\42\22\44\23\45\24\46\25\47\26\51\27\52\30\53\31\54\32\56\33\57\34\62\17\63\35\64\36\65\37\66\40\67\41\70\42\73\43\74\44\75\45\76\46\104\17\107\17" +
        "\106\0\2\1\2\2\2\3\2\4\2\5\2\6\2\7\2\10\2\11\2\12\2\13\2\14\2\15\2\16\2\17\2\20\2\21\2\22\2\23\2\24\2\25\2\26\2\27\2\30\2\31\2\32\2\33\2\34\2\35\2\37\3\40\2\41\2\42\2\43\2\44\2\45\2\47\2\50\2\51\2\52\2\53\2\54\2\55\2\56\2\57\2\60\2\61\2\62\3\63\2\64\2\65\2\66\2\67\2\70\2\71\2\72\2\73\2\74\2\75\4\76\2\77\2\100\2\101\2\102\2\103\2\104\3\105\2\106\2\107\5" +
        "\105\0\2\1\2\2\2\3\2\4\2\5\2\6\2\7\2\10\2\11\2\12\2\13\2\14\2\15\2\16\2\17\2\20\2\21\2\22\2\23\2\24\2\25\2\26\2\27\2\30\2\31\2\32\2\33\2\34\2\35\2\37\2\40\2\41\2\42\2\43\2\44\2\45\2\46\6\47\2\50\2\51\2\52\2\53\2\54\2\55\2\56\2\57\2\60\2\61\2\62\2\63\2\64\2\65\2\66\2\67\2\70\2\71\2\72\2\73\2\74\2\76\2\77\2\100\2\101\2\102\2\103\2\104\2\105\2\106\2" +
        "\106\0\2\1\2\2\2\3\2\4\2\5\2\6\2\7\2\10\2\11\2\12\2\13\2\14\2\15\2\16\2\17\2\20\2\21\2\22\2\23\2\24\2\25\2\26\2\27\2\30\2\31\2\32\2\33\2\34\2\35\2\37\3\40\2\41\2\42\2\43\2\44\2\45\2\46\6\47\2\50\2\51\2\52\2\53\2\54\2\55\2\56\2\57\2\60\2\61\2\62\3\63\2\64\2\65\2\66\2\67\2\70\2\71\2\72\2\73\2\74\2\76\2\77\2\100\2\101\2\102\2\103\2\104\3\105\2\106\2\107\5" +
        "\0" +
        "\4\62\5\104\5\107\5\37\5" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\51\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\52\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\53\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\54\2\47\3\47\4\47\5\47\6\47\7\55\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\56\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\57\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\1\35\16" +
        "\4\62\17\104\17\107\17\37\17" +
        "\0" +
        "\0" +
        "\0" +
        "\105\0\60\1\60\2\60\3\60\4\60\5\60\6\60\7\60\10\60\11\60\12\60\13\60\14\60\15\60\16\60\17\60\20\60\21\60\22\60\23\60\24\60\25\60\26\60\27\60\30\60\31\60\32\60\33\60\34\60\35\60\37\60\40\60\41\60\42\60\43\60\44\61\45\60\46\60\47\60\50\60\51\60\52\60\53\60\54\60\55\60\56\60\57\60\60\60\61\60\62\60\63\60\64\60\65\60\66\60\67\60\70\60\71\60\72\60\73\60\74\60\75\60\76\60\77\60\100\60\101\60\102\60\103\60\105\60\106\62" +
        "\0" +
        "\0" +
        "\106\0\63\1\63\2\63\3\63\4\63\5\63\6\63\7\63\10\63\11\63\12\63\13\63\14\63\15\63\16\63\17\63\20\63\21\63\22\63\23\63\24\63\25\63\26\63\27\63\30\63\31\63\32\63\33\63\34\63\35\63\36\63\37\63\40\64\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\0" +
        "\105\0\67\1\67\2\67\3\67\4\67\5\67\6\67\7\67\10\67\11\67\12\67\13\67\14\67\15\67\16\67\17\67\20\67\21\67\22\67\23\67\24\67\25\67\26\67\27\67\30\67\31\67\32\67\33\67\34\67\35\67\37\67\40\67\41\67\42\67\43\67\44\67\45\67\46\67\47\67\50\67\51\67\52\70\53\67\54\67\55\67\56\67\57\67\60\67\61\67\62\67\63\67\64\67\65\67\66\67\67\67\70\67\71\67\72\67\73\67\74\67\75\67\76\67\77\67\100\67\101\67\102\67\103\67\105\67\106\71" +
        "\0" +
        "\2\42\72\54\73" +
        "\0" +
        "\0" +
        "\0" +
        "\0" +
        "\0" +
        "\1\43\74" +
        "\0" +
        "\35\0\75\1\75\2\75\3\75\4\75\5\75\6\75\7\75\10\75\11\75\12\75\13\75\14\75\15\75\16\75\17\75\20\75\21\75\22\75\23\75\24\75\25\75\26\75\27\75\30\75\31\75\32\75\33\75\34\75" +
        "\5\1\76\4\77\10\100\13\101\17\102" +
        "\0" +
        "\0" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\103\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\104\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\105\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\106\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\107\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\110\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\111\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\105\0\60\1\60\2\60\3\60\4\60\5\60\6\60\7\60\10\60\11\60\12\60\13\60\14\60\15\60\16\60\17\60\20\60\21\60\22\60\23\60\24\60\25\60\26\60\27\60\30\60\31\60\32\60\33\60\34\60\35\60\37\60\40\60\41\60\42\60\43\60\44\61\45\60\46\60\47\60\50\60\51\60\52\60\53\60\54\60\55\60\56\60\57\60\60\60\61\60\62\60\63\60\64\60\65\60\66\60\67\60\70\60\71\60\72\60\73\60\74\60\75\60\76\60\77\60\100\60\101\60\102\60\103\60\105\60\106\62" +
        "\0" +
        "\106\0\112\1\112\2\112\3\112\4\112\5\112\6\112\7\112\10\112\11\112\12\112\13\112\14\112\15\112\16\112\17\112\20\112\21\112\22\112\23\112\24\112\25\112\26\112\27\112\30\112\31\112\32\112\33\112\34\112\35\112\37\112\40\112\41\112\42\112\43\112\44\112\45\112\46\112\47\112\50\112\51\112\52\112\53\112\54\112\55\112\56\112\57\112\60\112\61\112\62\112\63\112\64\112\65\112\66\112\67\112\70\112\71\112\72\112\73\112\74\112\75\112\76\112\77\112\100\112\101\112\102\112\103\112\104\112\105\112\106\112" +
        "\106\0\63\1\63\2\63\3\63\4\63\5\63\6\63\7\63\10\63\11\63\12\63\13\63\14\63\15\63\16\63\17\63\20\63\21\63\22\63\23\63\24\63\25\63\26\63\27\63\30\63\31\63\32\63\33\63\34\63\35\63\36\63\37\63\40\63\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\106\0\113\1\113\2\113\3\113\4\113\5\113\6\113\7\113\10\113\11\113\12\113\13\113\14\113\15\113\16\113\17\113\20\113\21\113\22\113\23\113\24\113\25\113\26\113\27\113\30\113\31\113\32\113\33\113\34\113\35\63\36\63\37\63\40\63\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\0" +
        "\106\0\114\1\114\2\114\3\114\4\114\5\114\6\114\7\114\10\114\11\114\12\114\13\114\14\114\15\114\16\114\17\114\20\114\21\114\22\114\23\114\24\114\25\114\26\114\27\114\30\114\31\114\32\114\33\114\34\114\35\114\37\114\40\114\41\114\42\114\43\114\44\114\45\114\46\114\47\114\50\114\51\114\52\114\53\114\54\114\55\114\56\114\57\114\60\114\61\114\62\114\63\114\64\114\65\114\66\114\67\114\70\114\71\114\72\114\73\114\74\114\75\114\76\114\77\114\100\114\101\114\102\114\103\114\104\114\105\114\106\114" +
        "\105\0\67\1\67\2\67\3\67\4\67\5\67\6\67\7\67\10\67\11\67\12\67\13\67\14\67\15\67\16\67\17\67\20\67\21\67\22\67\23\67\24\67\25\67\26\67\27\67\30\67\31\67\32\67\33\67\34\67\35\67\37\67\40\67\41\67\42\67\43\67\44\67\45\67\46\67\47\67\50\67\51\67\52\70\53\67\54\67\55\67\56\67\57\67\60\67\61\67\62\67\63\67\64\67\65\67\66\67\67\67\70\67\71\67\72\67\73\67\74\67\75\67\76\67\77\67\100\67\101\67\102\67\103\67\105\67\106\71" +
        "\0" +
        "\106\0\115\1\115\2\115\3\115\4\115\5\115\6\115\7\115\10\115\11\115\12\115\13\115\14\115\15\115\16\115\17\115\20\115\21\115\22\115\23\115\24\115\25\115\26\115\27\115\30\115\31\115\32\115\33\115\34\115\35\115\37\115\40\115\41\115\42\115\43\115\44\115\45\115\46\115\47\115\50\115\51\115\52\115\53\115\54\115\55\115\56\115\57\115\60\115\61\115\62\115\63\115\64\115\65\115\66\115\67\115\70\115\71\115\72\115\73\115\74\115\75\115\76\115\77\115\100\115\101\115\102\115\103\115\104\115\105\115\106\115" +
        "\107\0\116\1\116\2\116\3\116\4\116\5\116\6\116\7\116\10\116\11\116\12\116\13\116\14\116\15\116\16\116\17\116\20\116\21\116\22\116\23\116\24\116\25\116\26\116\27\116\30\116\31\116\32\116\33\116\34\116\35\116\37\116\40\116\41\116\42\117\43\116\44\116\45\116\46\116\47\116\50\116\51\116\52\116\53\116\54\116\55\116\56\116\57\116\60\116\61\116\62\116\63\116\64\116\65\116\66\116\67\116\70\116\71\116\72\116\73\116\74\116\75\116\76\116\77\116\100\116\101\116\102\116\103\116\104\116\105\116\106\116\107\116" +
        "\106\0\120\1\120\2\120\3\120\4\120\5\120\6\120\7\120\10\120\11\120\12\120\13\120\14\120\15\120\16\120\17\120\20\120\21\120\22\120\23\120\24\120\25\120\26\120\27\120\30\120\31\120\32\120\33\120\34\120\35\120\37\120\40\120\41\120\42\120\43\120\44\120\45\120\46\120\47\120\50\120\51\120\52\120\53\120\54\120\55\120\56\120\57\120\60\120\61\120\62\120\63\120\64\120\65\120\66\120\67\120\70\120\71\120\72\120\73\120\74\120\75\120\76\120\77\120\100\120\101\120\102\120\103\120\104\120\105\120\106\120" +
        "\0" +
        "\36\0\121\1\121\2\121\3\121\4\121\5\121\6\121\7\121\10\121\11\121\12\121\13\121\14\121\15\121\16\121\17\121\20\121\21\121\22\121\23\121\24\121\25\121\26\121\27\121\30\121\31\121\32\121\33\121\34\121\35\121" +
        "\1\27\122" +
        "\1\13\123" +
        "\1\12\124" +
        "\2\21\125\16\126" +
        "\1\13\127" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\130\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\131\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\132\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\133\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\134\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\135\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\136\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\105\0\60\1\60\2\60\3\60\4\60\5\60\6\60\7\60\10\60\11\60\12\60\13\60\14\60\15\60\16\60\17\60\20\60\21\60\22\60\23\60\24\60\25\60\26\60\27\60\30\60\31\60\32\60\33\60\34\60\35\60\37\60\40\60\41\60\42\60\43\60\44\61\45\60\46\60\47\60\50\60\51\60\52\60\53\60\54\60\55\60\56\60\57\60\60\60\61\60\62\60\63\60\64\60\65\60\66\60\67\60\70\60\71\60\72\60\73\60\74\60\75\60\76\60\77\60\100\60\101\60\102\60\103\60\105\60\106\62" +
        "\106\0\137\1\137\2\137\3\137\4\137\5\137\6\137\7\137\10\137\11\137\12\137\13\137\14\137\15\137\16\137\17\137\20\137\21\137\22\137\23\137\24\137\25\137\26\137\27\137\30\137\31\137\32\137\33\137\34\137\35\137\36\63\37\63\40\140\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\106\0\63\1\63\2\63\3\63\4\63\5\63\6\63\7\63\10\63\11\63\12\63\13\63\14\63\15\63\16\63\17\63\20\63\21\63\22\63\23\63\24\63\25\63\26\63\27\63\30\63\31\63\32\63\33\63\34\63\35\63\36\63\37\63\40\63\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\105\0\67\1\67\2\67\3\67\4\67\5\67\6\67\7\67\10\67\11\67\12\67\13\67\14\67\15\67\16\67\17\67\20\67\21\67\22\67\23\67\24\67\25\67\26\67\27\67\30\67\31\67\32\67\33\67\34\67\35\67\37\67\40\67\41\67\42\67\43\67\44\67\45\67\46\67\47\67\50\67\51\67\52\70\53\67\54\67\55\67\56\67\57\67\60\67\61\67\62\67\63\67\64\67\65\67\66\67\67\67\70\67\71\67\72\67\73\67\74\67\75\67\76\67\77\67\100\67\101\67\102\67\103\67\105\67\106\71" +
        "\107\0\116\1\116\2\116\3\116\4\116\5\116\6\116\7\116\10\116\11\116\12\116\13\116\14\116\15\116\16\116\17\116\20\116\21\116\22\116\23\116\24\116\25\116\26\116\27\116\30\116\31\116\32\116\33\116\34\116\35\116\37\116\40\116\41\116\42\117\43\116\44\116\45\116\46\116\47\116\50\116\51\116\52\116\53\116\54\116\55\116\56\116\57\116\60\116\61\116\62\116\63\116\64\116\65\116\66\116\67\116\70\116\71\116\72\116\73\116\74\116\75\116\76\116\77\116\100\116\101\116\102\116\103\116\104\116\105\116\106\116\107\116" +
        "\107\0\141\1\141\2\141\3\141\4\141\5\141\6\141\7\141\10\141\11\141\12\141\13\141\14\141\15\141\16\141\17\141\20\141\21\141\22\141\23\141\24\141\25\141\26\141\27\141\30\141\31\141\32\141\33\141\34\141\35\141\37\141\40\141\41\141\42\141\43\141\44\141\45\141\46\141\47\141\50\141\51\141\52\141\53\141\54\142\55\141\56\141\57\141\60\141\61\141\62\141\63\141\64\141\65\141\66\141\67\141\70\141\71\141\72\141\73\141\74\141\75\141\76\141\77\141\100\141\101\141\102\141\103\141\104\141\105\141\106\141\107\141" +
        "\106\0\120\1\120\2\120\3\120\4\120\5\120\6\120\7\120\10\120\11\120\12\120\13\120\14\120\15\120\16\120\17\120\20\120\21\120\22\120\23\120\24\120\25\120\26\120\27\120\30\120\31\120\32\120\33\120\34\120\35\120\37\120\40\120\41\120\42\120\43\120\44\120\45\120\46\120\47\120\50\120\51\120\52\120\53\120\54\120\55\120\56\120\57\120\60\120\61\120\62\120\63\120\64\120\65\120\66\120\67\120\70\120\71\120\72\120\73\120\74\120\75\120\76\120\77\120\100\120\101\120\102\120\103\120\104\120\105\120\106\120" +
        "\36\0\121\1\121\2\121\3\121\4\121\5\121\6\121\7\121\10\121\11\121\12\121\13\121\14\121\15\121\16\121\17\121\20\121\21\121\22\121\23\121\24\121\25\121\26\121\27\121\30\121\31\121\32\121\33\121\34\121\35\121" +
        "\1\15\143" +
        "\1\15\144" +
        "\1\3\145" +
        "\1\10\146" +
        "\1\21\147" +
        "\1\2\150" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\151\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\152\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\153\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\154\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\155\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\156\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\106\0\137\1\137\2\137\3\137\4\137\5\137\6\137\7\137\10\137\11\137\12\137\13\137\14\137\15\137\16\137\17\137\20\137\21\137\22\137\23\137\24\137\25\137\26\137\27\137\30\137\31\137\32\137\33\137\34\137\35\137\36\63\37\63\40\140\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\65\106\66" +
        "\106\0\63\1\63\2\63\3\63\4\63\5\63\6\63\7\63\10\63\11\63\12\63\13\63\14\63\15\63\16\63\17\63\20\63\21\63\22\63\23\63\24\63\25\63\26\63\27\63\30\63\31\63\32\63\33\63\34\63\35\63\36\63\37\63\40\63\41\63\42\63\43\63\44\63\45\63\46\63\47\63\50\63\51\63\52\63\53\63\54\63\55\63\56\63\57\63\60\63\61\63\62\63\63\63\64\63\65\63\66\63\67\63\70\63\71\63\72\63\73\63\74\63\75\63\76\63\77\63\100\63\101\63\102\63\103\63\105\157\106\66" +
        "\107\0\116\1\116\2\116\3\116\4\116\5\116\6\116\7\116\10\116\11\116\12\116\13\116\14\116\15\116\16\116\17\116\20\116\21\116\22\116\23\116\24\116\25\116\26\116\27\116\30\116\31\116\32\116\33\116\34\116\35\116\37\116\40\116\41\116\42\117\43\116\44\116\45\116\46\116\47\116\50\116\51\116\52\116\53\116\54\116\55\116\56\116\57\116\60\116\61\116\62\116\63\116\64\116\65\116\66\116\67\116\70\116\71\116\72\116\73\116\74\116\75\116\76\116\77\116\100\116\101\116\102\116\103\116\104\116\105\116\106\116\107\116" +
        "\0" +
        "\1\23\160" +
        "\1\27\161" +
        "\1\1\162" +
        "\1\27\163" +
        "\1\12\164" +
        "\1\12\165" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\166\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\167\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\170\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\171\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\0" +
        "\1\12\172" +
        "\1\5\173" +
        "\1\12\174" +
        "\1\17\175" +
        "\1\25\176" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\177\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\200\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\201\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\0" +
        "\107\0\202\1\202\2\202\3\202\4\202\5\202\6\202\7\202\10\202\11\202\12\202\13\202\14\202\15\202\16\202\17\202\20\202\21\202\22\202\23\202\24\202\25\202\26\202\27\202\30\202\31\202\32\202\33\202\34\202\35\202\37\202\40\202\41\202\42\202\43\202\44\202\45\202\46\202\47\202\50\202\51\202\52\202\53\202\54\202\55\202\56\202\57\202\60\202\61\202\62\202\63\202\64\202\65\202\66\202\67\202\70\202\71\202\72\202\73\203\74\202\75\202\76\202\77\202\100\202\101\202\102\202\103\202\104\202\105\202\106\202\107\202" +
        "\0" +
        "\1\7\204" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\205\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\107\0\202\1\202\2\202\3\202\4\202\5\202\6\202\7\202\10\202\11\202\12\202\13\202\14\202\15\202\16\202\17\202\20\202\21\202\22\202\23\202\24\202\25\202\26\202\27\202\30\202\31\202\32\202\33\202\34\202\35\202\37\202\40\202\41\202\42\202\43\202\44\202\45\202\46\202\47\202\50\202\51\202\52\202\53\202\54\202\55\202\56\202\57\202\60\202\61\202\62\202\63\202\64\202\65\202\66\202\67\202\70\202\71\202\72\202\73\206\74\202\75\202\76\202\77\202\100\202\101\202\102\202\103\202\104\202\105\202\106\202\107\202" +
        "\107\0\207\1\207\2\207\3\207\4\207\5\207\6\207\7\207\10\207\11\207\12\207\13\210\14\207\15\207\16\207\17\207\20\207\21\207\22\207\23\207\24\207\25\207\26\207\27\207\30\207\31\207\32\207\33\207\34\207\35\207\37\207\40\207\41\207\42\207\43\207\44\207\45\207\46\207\47\207\50\207\51\207\52\207\53\207\54\207\55\207\56\207\57\207\60\207\61\207\62\207\63\207\64\207\65\207\66\207\67\207\70\207\71\207\72\207\73\207\74\207\75\207\76\207\77\207\100\207\101\207\102\207\103\207\104\207\105\207\106\207\107\207" +
        "\1\5\211" +
        "\37\0\47\1\47\2\47\3\47\4\212\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\107\0\207\1\207\2\207\3\207\4\207\5\207\6\207\7\207\10\207\11\207\12\207\13\213\14\207\15\207\16\207\17\207\20\207\21\207\22\207\23\207\24\207\25\207\26\207\27\207\30\207\31\207\32\207\33\207\34\207\35\207\37\207\40\207\41\207\42\207\43\207\44\207\45\207\46\207\47\207\50\207\51\207\52\207\53\207\54\207\55\207\56\207\57\207\60\207\61\207\62\207\63\207\64\207\65\207\66\207\67\207\70\207\71\207\72\207\73\207\74\207\75\207\76\207\77\207\100\207\101\207\102\207\103\207\104\207\105\207\106\207\107\207" +
        "\107\0\202\1\202\2\202\3\202\4\202\5\202\6\202\7\202\10\202\11\202\12\202\13\202\14\202\15\202\16\202\17\202\20\202\21\202\22\202\23\202\24\202\25\202\26\202\27\202\30\202\31\202\32\202\33\202\34\202\35\202\37\202\40\202\41\202\42\202\43\202\44\202\45\202\46\202\47\202\50\202\51\202\52\202\53\202\54\202\55\202\56\202\57\202\60\202\61\202\62\202\63\202\64\202\65\202\66\202\67\202\70\202\71\202\72\202\73\206\74\202\75\202\76\202\77\202\100\202\101\202\102\202\103\202\104\202\105\202\106\202\107\202" +
        "\107\0\214\1\214\2\214\3\214\4\214\5\215\6\214\7\214\10\214\11\214\12\214\13\214\14\214\15\214\16\214\17\214\20\214\21\214\22\214\23\214\24\214\25\214\26\214\27\214\30\214\31\214\32\214\33\214\34\214\35\214\37\214\40\214\41\214\42\214\43\214\44\214\45\214\46\214\47\214\50\214\51\214\52\214\53\214\54\214\55\214\56\214\57\214\60\214\61\214\62\214\63\214\64\214\65\214\66\214\67\214\70\214\71\214\72\214\73\214\74\214\75\214\76\214\77\214\100\214\101\214\102\214\103\214\104\214\105\214\106\214\107\214" +
        "\0" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\216\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\107\0\214\1\214\2\214\3\214\4\214\5\217\6\214\7\214\10\214\11\214\12\214\13\214\14\214\15\214\16\214\17\214\20\214\21\214\22\214\23\214\24\214\25\214\26\214\27\214\30\214\31\214\32\214\33\214\34\214\35\214\37\214\40\214\41\214\42\214\43\214\44\214\45\214\46\214\47\214\50\214\51\214\52\214\53\214\54\214\55\214\56\214\57\214\60\214\61\214\62\214\63\214\64\214\65\214\66\214\67\214\70\214\71\214\72\214\73\214\74\214\75\214\76\214\77\214\100\214\101\214\102\214\103\214\104\214\105\214\106\214\107\214" +
        "\107\0\202\1\202\2\202\3\202\4\202\5\202\6\202\7\202\10\202\11\202\12\202\13\202\14\202\15\202\16\202\17\202\20\202\21\202\22\202\23\202\24\202\25\202\26\202\27\202\30\202\31\202\32\202\33\202\34\202\35\202\37\202\40\202\41\202\42\202\43\202\44\202\45\202\46\202\47\202\50\202\51\202\52\202\53\202\54\202\55\202\56\202\57\202\60\202\61\202\62\202\63\202\64\202\65\202\66\202\67\202\70\202\71\202\72\202\73\206\74\202\75\202\76\202\77\202\100\202\101\202\102\202\103\202\104\202\105\202\106\202\107\202" +
        "\106\0\220\1\220\2\220\3\220\4\220\5\220\6\220\7\220\10\220\11\220\12\220\13\220\15\220\16\220\17\220\20\220\21\220\22\220\23\220\24\220\25\220\26\220\27\220\30\220\31\220\32\220\33\220\34\220\35\220\37\220\40\220\41\220\42\220\43\220\44\220\45\220\46\220\47\220\50\220\51\220\52\220\53\220\54\220\55\220\56\220\57\220\60\220\61\220\62\220\63\220\64\220\65\220\66\220\67\220\70\220\71\220\72\220\73\220\74\220\75\220\76\220\77\220\100\220\101\220\102\220\103\220\104\220\105\220\106\220\107\220" +
        "\37\0\47\1\221\2\47\3\47\4\47\5\47\6\47\7\47\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\107\0\220\1\220\2\220\3\220\4\220\5\220\6\220\7\220\10\220\11\220\12\220\13\220\14\222\15\220\16\220\17\220\20\220\21\220\22\220\23\220\24\220\25\220\26\220\27\220\30\220\31\220\32\220\33\220\34\220\35\220\37\220\40\220\41\220\42\220\43\220\44\220\45\220\46\220\47\220\50\220\51\220\52\220\53\220\54\220\55\220\56\220\57\220\60\220\61\220\62\220\63\220\64\220\65\220\66\220\67\220\70\220\71\220\72\220\73\220\74\220\75\220\76\220\77\220\100\220\101\220\102\220\103\220\104\220\105\220\106\220\107\220" +
        "\107\0\202\1\202\2\202\3\202\4\202\5\202\6\202\7\202\10\202\11\202\12\202\13\202\14\202\15\202\16\202\17\202\20\202\21\202\22\202\23\202\24\202\25\202\26\202\27\202\30\202\31\202\32\202\33\202\34\202\35\202\37\202\40\202\41\202\42\202\43\202\44\202\45\202\46\202\47\202\50\202\51\202\52\202\53\202\54\202\55\202\56\202\57\202\60\202\61\202\62\202\63\202\64\202\65\202\66\202\67\202\70\202\71\202\72\202\73\206\74\202\75\202\76\202\77\202\100\202\101\202\102\202\103\202\104\202\105\202\106\202\107\202" +
        "\37\0\47\1\47\2\47\3\47\4\47\5\47\6\47\7\47\10\223\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\65\50" +
        "\0" +
        "\44\0\47\1\47\2\47\3\47\4\47\104\224\5\47\6\47\7\47\107\224\10\47\11\47\12\47\13\47\14\47\15\47\16\47\17\47\20\47\21\47\22\47\23\47\24\47\25\47\26\47\27\47\30\47\31\47\32\47\33\47\34\47\35\47\37\224\62\224\65\50\74\225" +
        "\5\62\224\104\224\107\224\74\225\37\224" +
        "\0";
    static int[][] trans = unpackTrans(trans_packed);
    int curMode = DEFAULT;
    Token lastToken;


    public Lexer(Reader reader) throws IOException{
        this.reader = reader;
        init();
    }

    public Lexer(File file) throws IOException {
        this.reader = new BufferedReader(new FileReader(file));
        init();
    }

    static boolean getBit(int[] arr, int state) {
        return ((arr[state / 32] >> (state % 32)) & 1) != 0;
    }

    static int[][] unpackTrans(String str) {
        int pos = 0;
        int max = str.charAt(pos++);
        List<int[]> list = new ArrayList<>();
        while (pos < str.length()) {
            int[] arr = new int[max];
            Arrays.fill(arr, -1);
            int trCount = str.charAt(pos++);
            for (int input = 0; input < trCount; input++) {
                //input -> target state
                arr[str.charAt(pos++)] = str.charAt(pos++);
            }
            list.add(arr);
        }
        return list.toArray(new int[0][]);
    }

    static int[] unpackCMap(String str){
        int pos = 0;
        int[] arr = new int[0x010FFFF];//covers all code points
        Arrays.fill(arr, -1);//unused chars leads error
        while(pos < str.length()){
            int left = str.charAt(pos++);
            int right = str.charAt(pos++);
            int id = str.charAt(pos++);
            for(int i = left;i <= right;i++){
                arr[i] = id;
            }
      }
      return arr;
    }

    void init() throws IOException{
      reader.read(yybuf, 0, bufSize);
    }

    void fill() throws IOException{
      if(bufPos == yybuf.length){
        char[] newBuf = new char[yybuf.length * 2];
        System.arraycopy(yybuf, 0, newBuf, 0, yybuf.length);
        reader.read(newBuf, bufPos, yybuf.length);
        yybuf = newBuf;
      }
    }

    String getText(){
      return new String(yybuf, bufStart, bufPos - bufStart);
    }

    String findExpected(int from){
        StringBuilder sb = new StringBuilder();
        for(int i = 0 ; i < trans[from].length;i++){
            sb.append(cMapRegex[i]);
            sb.append(",");
        }
        return sb.toString();
    }

    Token getEOF(){
        Token res =  new Token(EOF, "");
        res.name = "EOF";
        res.line = yyline;
        return res;
    }

    public Token next() throws IOException {
        Token tok = next_normal();
        if(getBit(skip, tok.type)){
          return next();
        }
        return tok;
    }

    public Token next_normal() throws IOException {
        fill();
        int curState = curMode;
        int lastState = -1;
        int startPos = yypos;
        int startLine = yyline;
        yychar = yybuf[bufPos];
        if (yychar == EOF) return getEOF();
        int backupState = -1;
        while (true) {
            fill();
            yychar = yybuf[bufPos];
            if(yychar == EOF){
                curState = -1;
            }else{
                backupState = curState;
                if(cMap[yychar] == -1){
                    throw new IOException(String.format("unknown input=%c(%d) pos=%s line=%d",yychar, yychar, yypos, yyline));
                }
                curState = trans[curState][cMap[yychar]];
            }
            if (curState == -1) {
                if (lastState != -1) {
                    Token token = new Token(ids[lastState], getText());
                    token.offset = startPos;
                    token.name = names[token.type];
                    token.line = startLine;
                    bufStart = bufPos;
                    curMode = mode_map[lastState];
                    lastToken = token;
                    return token;
                }
                else {
                    throw new IOException(String.format("invalid input=%c(%d) pos=%s line=%d mode=%s buf='%s' expecting=%s",yychar,yychar,yypos,yyline,printMode(),getText(),findExpected(backupState)));
                }
            }
            else {
                if (getBit(accepting, curState)) lastState = curState;
                if(yychar == '\n'){
                    yyline++;
                    if(bufPos > 0 && yybuf[bufPos - 1] == '\r'){
                        yyline--;
                    }
                }
                else if(yychar == '\r'){
                    yyline++;
                }
                bufPos++;
                yypos++;
            }
        }
    }

    String printMode(){
        switch(curMode){
            case 1: return "member_mode";
            case 0: return "DEFAULT";

        }
        throw new RuntimeException("invalid mode: " + curMode);
    }
}
