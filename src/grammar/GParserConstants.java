/* Generated By:JavaCC: Do not edit this line. GParserConstants.java */
package grammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 9;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 10;
  /** RegularExpression Id. */
  int LPAREN = 12;
  /** RegularExpression Id. */
  int RPAREN = 13;
  /** RegularExpression Id. */
  int LBRACE = 14;
  /** RegularExpression Id. */
  int RBRACE = 15;
  /** RegularExpression Id. */
  int LBRACKET = 16;
  /** RegularExpression Id. */
  int RBRACKET = 17;
  /** RegularExpression Id. */
  int SEMI = 18;
  /** RegularExpression Id. */
  int COLON = 19;
  /** RegularExpression Id. */
  int DOT = 20;
  /** RegularExpression Id. */
  int COMMA = 21;
  /** RegularExpression Id. */
  int QUOTE = 22;
  /** RegularExpression Id. */
  int EQ = 23;
  /** RegularExpression Id. */
  int STAR = 24;
  /** RegularExpression Id. */
  int PLUS = 25;
  /** RegularExpression Id. */
  int QUES = 26;
  /** RegularExpression Id. */
  int XOR = 27;
  /** RegularExpression Id. */
  int TOKEN_ = 28;
  /** RegularExpression Id. */
  int TOKENS = 29;
  /** RegularExpression Id. */
  int SKIP_ = 30;
  /** RegularExpression Id. */
  int STRING_LITERAL = 31;
  /** RegularExpression Id. */
  int IDENT = 32;
  /** RegularExpression Id. */
  int CHAR = 33;
  /** RegularExpression Id. */
  int LEX_CHAR = 34;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"//\"",
    "<token of kind 6>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 11>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\":\"",
    "\".\"",
    "\",\"",
    "\"\\\'\"",
    "\"=\"",
    "\"*\"",
    "\"+\"",
    "\"?\"",
    "\"^\"",
    "\"token\"",
    "\"tokens\"",
    "\"skip\"",
    "<STRING_LITERAL>",
    "<IDENT>",
    "<CHAR>",
    "<LEX_CHAR>",
    "\"|\"",
    "\"-\"",
  };

}
