/* The following code was generated by JFlex 1.7.0 */

package gen;


@SuppressWarnings("ALL")

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>./_JavaLexer.flex</tt>
 */
public class JavaLexer {

    /**
     * This character denotes the end of file
     */
    public static final int YYEOF = -1;

    /**
     * initial size of the lookahead buffer
     */
    private static final int ZZ_BUFFERSIZE = 16384;

    /**
     * lexical states
     */
    public static final int YYINITIAL = 0;

    /**
     * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
     * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
     * at the beginning of a line
     * l is of the form l = 2*k, k a non negative integer
     */
    private static final int ZZ_LEXSTATE[] = {
            0, 0
    };

    /**
     * Translates characters to character classes
     */
    private static final String ZZ_CMAP_PACKED =
            "\11\7\1\3\1\2\1\15\1\16\1\1\16\7\4\0\1\3\1\63" +
                    "\1\13\1\0\1\6\1\72\1\70\1\14\1\73\1\74\1\5\1\65" +
                    "\1\102\1\30\1\20\1\4\1\22\11\10\1\105\1\101\1\66\1\62" +
                    "\1\67\1\104\1\106\1\12\1\24\1\12\1\26\1\27\1\25\5\6" +
                    "\1\21\3\6\1\31\7\6\1\23\2\6\1\77\1\0\1\100\1\71" +
                    "\1\11\1\0\1\37\1\43\1\44\1\52\1\35\1\36\1\55\1\50" +
                    "\1\51\1\6\1\46\1\40\1\53\1\42\1\45\1\56\1\6\1\33" +
                    "\1\41\1\32\1\34\1\57\1\60\1\54\1\47\1\61\1\75\1\64" +
                    "\1\76\1\103\6\7\1\17\32\7\2\0\4\6\4\0\1\6\2\0" +
                    "\1\7\7\0\1\6\4\0\1\6\5\0\27\6\1\0\37\6\1\0" +
                    "\u01ca\6\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\21\0" +
                    "\160\7\5\6\1\0\2\6\2\0\4\6\1\0\1\6\6\0\1\6" +
                    "\1\0\3\6\1\0\1\6\1\0\24\6\1\0\123\6\1\0\213\6" +
                    "\1\0\5\7\2\0\246\6\1\0\46\6\2\0\1\6\7\0\47\6" +
                    "\7\0\1\6\1\0\55\7\1\0\1\7\1\0\2\7\1\0\2\7" +
                    "\1\0\1\7\10\0\33\6\5\0\3\6\15\0\6\7\5\0\1\6" +
                    "\4\0\13\7\1\0\1\7\3\0\53\6\37\7\4\0\2\6\1\7" +
                    "\143\6\1\0\1\6\10\7\1\0\6\7\2\6\2\7\1\0\4\7" +
                    "\2\6\12\7\3\6\2\0\1\6\17\0\1\7\1\6\1\7\36\6" +
                    "\33\7\2\0\131\6\13\7\1\6\16\0\12\7\41\6\11\7\2\6" +
                    "\4\0\1\6\5\0\26\6\4\7\1\6\11\7\1\6\3\7\1\6" +
                    "\5\7\22\0\31\6\3\7\4\0\13\6\65\0\25\6\1\0\10\6" +
                    "\26\0\60\7\66\6\3\7\1\6\22\7\1\6\7\7\12\6\2\7" +
                    "\2\0\12\7\1\0\20\6\3\7\1\0\10\6\2\0\2\6\2\0" +
                    "\26\6\1\0\7\6\1\0\1\6\3\0\4\6\2\0\1\7\1\6" +
                    "\7\7\2\0\2\7\2\0\3\7\1\6\10\0\1\7\4\0\2\6" +
                    "\1\0\3\6\2\7\2\0\12\7\4\6\7\0\2\6\4\0\3\7" +
                    "\1\0\6\6\4\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6" +
                    "\1\0\2\6\1\0\2\6\2\0\1\7\1\0\5\7\4\0\2\7" +
                    "\2\0\3\7\3\0\1\7\7\0\4\6\1\0\1\6\7\0\14\7" +
                    "\3\6\1\7\13\0\3\7\1\0\11\6\1\0\3\6\1\0\26\6" +
                    "\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6\10\7" +
                    "\1\0\3\7\1\0\3\7\2\0\1\6\17\0\2\6\2\7\2\0" +
                    "\12\7\1\0\1\6\7\0\1\6\6\7\1\0\3\7\1\0\10\6" +
                    "\2\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0\5\6" +
                    "\2\0\1\7\1\6\7\7\2\0\2\7\2\0\3\7\10\0\2\7" +
                    "\4\0\2\6\1\0\3\6\2\7\2\0\12\7\1\0\1\6\20\0" +
                    "\1\7\1\6\1\0\6\6\3\0\3\6\1\0\4\6\3\0\2\6" +
                    "\1\0\1\6\1\0\2\6\3\0\2\6\3\0\3\6\3\0\14\6" +
                    "\4\0\5\7\3\0\3\7\1\0\4\7\2\0\1\6\6\0\1\7" +
                    "\16\0\12\7\11\0\1\6\6\0\4\7\1\0\10\6\1\0\3\6" +
                    "\1\0\27\6\1\0\20\6\3\0\1\6\7\7\1\0\3\7\1\0" +
                    "\4\7\7\0\2\7\1\0\3\6\5\0\2\6\2\7\2\0\12\7" +
                    "\20\0\1\6\3\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0" +
                    "\12\6\1\0\5\6\2\0\1\7\1\6\7\7\1\0\3\7\1\0" +
                    "\4\7\7\0\2\7\7\0\1\6\1\0\2\6\2\7\2\0\12\7" +
                    "\1\0\2\6\15\0\4\7\1\0\10\6\1\0\3\6\1\0\51\6" +
                    "\2\7\1\6\7\7\1\0\3\7\1\0\4\7\1\6\5\0\3\6" +
                    "\1\7\7\0\3\6\2\7\2\0\12\7\12\0\6\6\2\0\2\7" +
                    "\1\0\22\6\3\0\30\6\1\0\11\6\1\0\1\6\2\0\7\6" +
                    "\3\0\1\7\4\0\6\7\1\0\1\7\1\0\10\7\6\0\12\7" +
                    "\2\0\2\7\15\0\60\6\1\7\2\6\7\7\4\0\10\6\10\7" +
                    "\1\0\12\7\47\0\2\6\1\0\1\6\2\0\2\6\1\0\1\6" +
                    "\2\0\1\6\6\0\4\6\1\0\7\6\1\0\3\6\1\0\1\6" +
                    "\1\0\1\6\2\0\2\6\1\0\4\6\1\7\2\6\6\7\1\0" +
                    "\2\7\1\6\2\0\5\6\1\0\1\6\1\0\6\7\2\0\12\7" +
                    "\2\0\4\6\40\0\1\6\27\0\2\7\6\0\12\7\13\0\1\7" +
                    "\1\0\1\7\1\0\1\7\4\0\2\7\10\6\1\0\44\6\4\0" +
                    "\24\7\1\0\2\7\5\6\13\7\1\0\44\7\11\0\1\7\71\0" +
                    "\53\6\24\7\1\6\12\7\6\0\6\6\4\7\4\6\3\7\1\6" +
                    "\3\7\2\6\7\7\3\6\4\7\15\6\14\7\1\6\17\7\2\0" +
                    "\46\6\1\0\1\6\5\0\1\6\2\0\53\6\1\0\u014d\6\1\0" +
                    "\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\51\6\1\0" +
                    "\4\6\2\0\41\6\1\0\4\6\2\0\7\6\1\0\1\6\1\0" +
                    "\4\6\2\0\17\6\1\0\71\6\1\0\4\6\2\0\103\6\2\0" +
                    "\3\7\40\0\20\6\20\0\126\6\2\0\6\6\3\0\u026c\6\2\0" +
                    "\21\6\1\0\32\6\5\0\113\6\3\0\13\6\7\0\15\6\1\0" +
                    "\4\6\3\7\13\0\22\6\3\7\13\0\22\6\2\7\14\0\15\6" +
                    "\1\0\3\6\1\0\2\7\14\0\64\6\40\7\3\0\1\6\3\0" +
                    "\2\6\1\7\2\0\12\7\41\0\4\7\1\0\12\7\6\0\130\6" +
                    "\10\0\5\6\2\7\42\6\1\7\1\6\5\0\106\6\12\0\37\6" +
                    "\1\0\14\7\4\0\14\7\12\0\12\7\36\6\2\0\5\6\13\0" +
                    "\54\6\4\0\32\6\6\0\12\7\46\0\27\6\5\7\4\0\65\6" +
                    "\12\7\1\0\35\7\2\0\13\7\6\0\12\7\15\0\1\6\10\0" +
                    "\16\7\102\0\5\7\57\6\21\7\7\6\4\0\12\7\21\0\11\7" +
                    "\14\0\3\7\36\6\15\7\2\6\12\7\54\6\16\7\14\0\44\6" +
                    "\24\7\10\0\12\7\3\0\3\6\12\7\44\6\2\0\11\6\107\0" +
                    "\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6\3\7\6\0" +
                    "\300\6\72\7\1\0\5\7\u0116\6\2\0\6\6\2\0\46\6\2\0" +
                    "\6\6\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0" +
                    "\37\6\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6\1\0" +
                    "\7\6\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6\1\0" +
                    "\7\6\16\0\5\7\30\0\1\15\1\15\5\7\20\0\2\6\23\0" +
                    "\1\6\13\0\5\7\1\0\12\7\1\0\1\6\15\0\1\6\20\0" +
                    "\15\6\3\0\40\6\20\0\15\7\4\0\1\7\3\0\14\7\21\0" +
                    "\1\6\4\0\1\6\2\0\12\6\1\0\1\6\3\0\5\6\6\0" +
                    "\1\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0" +
                    "\4\6\5\0\5\6\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0" +
                    "\57\6\1\0\205\6\6\0\4\6\3\7\2\6\14\0\46\6\1\0" +
                    "\1\6\5\0\1\6\2\0\70\6\7\0\1\6\17\0\1\7\27\6" +
                    "\11\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6" +
                    "\1\0\7\6\1\0\7\6\1\0\7\6\1\0\40\7\57\0\1\6" +
                    "\u01d5\0\3\6\31\0\11\6\6\7\1\0\5\6\2\0\5\6\4\0" +
                    "\126\6\2\0\2\7\2\0\3\6\1\0\132\6\1\0\4\6\5\0" +
                    "\52\6\2\0\136\6\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0" +
                    "\u51eb\6\25\0\u048d\6\103\0\56\6\2\0\u010d\6\3\0\20\6\12\7" +
                    "\2\6\24\0\57\6\1\7\4\0\12\7\1\0\37\6\2\7\120\6" +
                    "\2\7\45\0\11\6\2\0\147\6\2\0\44\6\1\0\10\6\77\0" +
                    "\13\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7\20\0\1\6" +
                    "\7\0\64\6\14\0\2\7\62\6\22\7\12\0\12\7\6\0\22\7" +
                    "\6\6\3\0\1\6\1\0\1\6\2\0\12\7\34\6\10\7\2\0" +
                    "\27\6\15\7\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6" +
                    "\12\7\6\0\5\6\1\7\12\6\12\7\5\6\1\0\51\6\16\7" +
                    "\11\0\3\6\1\7\10\6\2\7\2\0\12\7\6\0\27\6\3\0" +
                    "\1\6\3\7\62\6\1\7\1\6\3\7\2\6\2\7\5\6\2\7" +
                    "\1\6\1\7\1\6\30\0\3\6\2\0\13\6\5\7\2\0\3\6" +
                    "\2\7\12\0\6\6\2\0\6\6\2\0\6\6\11\0\7\6\1\0" +
                    "\7\6\1\0\53\6\1\0\12\6\12\0\163\6\10\7\1\0\2\7" +
                    "\2\0\12\7\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0\u016e\6" +
                    "\2\0\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7\12\6" +
                    "\1\0\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6" +
                    "\1\0\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0\15\6" +
                    "\3\0\20\7\20\0\20\7\3\0\2\6\30\0\3\6\31\0\1\6" +
                    "\6\0\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0\12\7" +
                    "\7\0\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0\6\6" +
                    "\2\0\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0\2\6" +
                    "\22\0\3\7\4\0\14\6\1\0\32\6\1\0\23\6\1\0\2\6" +
                    "\1\0\17\6\2\0\16\6\42\0\173\6\105\0\65\6\210\0\1\7" +
                    "\202\0\35\6\3\0\61\6\17\0\1\7\37\0\40\6\15\0\36\6" +
                    "\5\0\46\6\5\7\5\0\36\6\2\0\44\6\4\0\10\6\1\0" +
                    "\5\6\52\0\236\6\2\0\12\7\6\0\44\6\4\0\44\6\4\0" +
                    "\50\6\10\0\64\6\234\0\u0137\6\11\0\26\6\12\0\10\6\230\0" +
                    "\6\6\2\0\1\6\1\0\54\6\1\0\2\6\3\0\1\6\2\0" +
                    "\27\6\12\0\27\6\11\0\37\6\101\0\23\6\1\0\2\6\12\0" +
                    "\26\6\12\0\32\6\106\0\70\6\6\0\2\6\100\0\1\6\3\7" +
                    "\1\0\2\7\5\0\4\7\4\6\1\0\3\6\1\0\33\6\4\0" +
                    "\3\7\4\0\1\7\40\0\35\6\3\0\35\6\43\0\10\6\1\0" +
                    "\34\6\2\7\31\0\66\6\12\0\26\6\12\0\23\6\15\0\22\6" +
                    "\156\0\111\6\67\0\63\6\15\0\63\6\u030d\0\3\7\65\6\17\7" +
                    "\37\0\12\7\17\0\4\7\55\6\13\7\2\0\1\7\22\0\31\6" +
                    "\7\0\12\7\6\0\3\7\44\6\16\7\1\0\12\7\20\0\43\6" +
                    "\1\7\2\0\1\6\11\0\3\7\60\6\16\7\4\6\5\0\3\7" +
                    "\3\0\12\7\1\6\1\0\1\6\43\0\22\6\1\0\31\6\14\7" +
                    "\6\0\1\7\101\0\7\6\1\0\1\6\1\0\4\6\1\0\17\6" +
                    "\1\0\12\6\7\0\57\6\14\7\5\0\12\7\6\0\4\7\1\0" +
                    "\10\6\2\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0" +
                    "\5\6\2\0\1\7\1\6\7\7\2\0\2\7\2\0\3\7\2\0" +
                    "\1\6\6\0\1\7\5\0\5\6\2\7\2\0\7\7\3\0\5\7" +
                    "\213\0\65\6\22\7\4\6\5\0\12\7\46\0\60\6\24\7\2\6" +
                    "\1\0\1\6\10\0\12\7\246\0\57\6\7\7\2\0\11\7\27\0" +
                    "\4\6\2\7\42\0\60\6\21\7\3\0\1\6\13\0\12\7\46\0" +
                    "\53\6\15\7\10\0\12\7\66\0\32\6\3\0\17\7\4\0\12\7" +
                    "\u0166\0\100\6\12\7\25\0\1\6\u0100\0\1\6\12\7\50\6\7\7" +
                    "\1\6\4\7\10\0\1\7\10\0\1\6\13\7\50\6\2\0\4\6" +
                    "\20\7\46\0\71\6\u0107\0\11\6\1\0\45\6\10\7\1\0\10\7" +
                    "\1\6\17\0\12\7\30\0\36\6\2\0\26\7\1\0\16\7\111\0" +
                    "\7\6\1\0\2\6\1\0\46\6\6\7\3\0\1\7\1\0\2\7" +
                    "\1\0\7\7\1\6\1\7\10\0\12\7\u02a6\0\u039a\6\146\0\157\6" +
                    "\21\0\304\6\u0abc\0\u042f\6\u0fd1\0\u0247\6\u21b9\0\u0239\6\7\0\37\6" +
                    "\1\0\12\7\146\0\36\6\2\0\5\7\13\0\60\6\7\7\11\0" +
                    "\4\6\14\0\12\7\11\0\25\6\5\0\23\6\u0370\0\105\6\13\0" +
                    "\1\6\56\7\20\0\4\7\15\6\100\0\2\6\36\0\u17ed\6\23\0" +
                    "\u02f3\6\u250d\0\u011f\6\121\0\u018c\6\u0904\0\153\6\5\0\15\6\3\0" +
                    "\11\6\7\0\12\6\3\0\2\7\1\0\4\7\u14c1\0\5\7\3\0" +
                    "\26\7\2\0\7\7\36\0\4\7\224\0\3\7\u01bb\0\125\6\1\0" +
                    "\107\6\1\0\2\6\2\0\1\6\2\0\2\6\2\0\4\6\1\0" +
                    "\14\6\1\0\1\6\1\0\7\6\1\0\101\6\1\0\4\6\2\0" +
                    "\10\6\1\0\7\6\1\0\34\6\1\0\4\6\1\0\5\6\1\0" +
                    "\1\6\3\0\7\6\1\0\u0154\6\2\0\31\6\1\0\31\6\1\0" +
                    "\37\6\1\0\31\6\1\0\37\6\1\0\31\6\1\0\37\6\1\0" +
                    "\31\6\1\0\37\6\1\0\31\6\1\0\10\6\2\0\62\7\u0200\0" +
                    "\67\7\4\0\62\7\10\0\1\7\16\0\1\7\26\0\5\7\1\0" +
                    "\17\7\u0550\0\7\7\1\0\21\7\2\0\7\7\1\0\2\7\1\0" +
                    "\5\7\u07d5\0\305\6\13\0\7\7\51\0\104\6\7\7\5\0\12\7" +
                    "\u04a6\0\4\6\1\0\33\6\1\0\2\6\1\0\1\6\2\0\1\6" +
                    "\1\0\12\6\1\0\4\6\1\0\1\6\1\0\1\6\6\0\1\6" +
                    "\4\0\1\6\1\0\1\6\1\0\1\6\1\0\3\6\1\0\2\6" +
                    "\1\0\1\6\2\0\1\6\1\0\1\6\1\0\1\6\1\0\1\6" +
                    "\1\0\1\6\1\0\2\6\1\0\1\6\2\0\4\6\1\0\7\6" +
                    "\1\0\4\6\1\0\4\6\1\0\1\6\1\0\12\6\1\0\21\6" +
                    "\5\0\3\6\1\0\5\6\1\0\21\6\u1144\0\ua6d7\6\51\0\u1035\6" +
                    "\13\0\336\6\2\0\u1682\6\16\0\u1d31\6\u0c1f\0\u021e\6\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0" +
                    "\1\7\36\0\140\7\200\0\360\7\uffff\0\uffff\0\ufe12\0";

    /**
     * Translates characters to character classes
     */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 =
            "\1\0\1\1\2\2\1\3\1\4\1\5\1\6\2\1" +
                    "\1\7\1\6\1\10\20\5\1\11\1\12\1\13\1\14" +
                    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24" +
                    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34" +
                    "\1\35\1\36\1\0\1\37\1\40\1\41\1\42\1\43" +
                    "\2\41\1\0\1\44\1\0\1\45\1\0\2\6\1\46" +
                    "\1\47\1\50\34\5\1\51\3\5\1\52\6\5\1\53" +
                    "\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63" +
                    "\1\64\1\65\1\66\1\67\2\36\2\0\1\41\1\70" +
                    "\1\6\1\0\2\5\1\71\10\5\1\72\13\5\1\73" +
                    "\11\5\1\74\14\5\1\75\1\0\1\36\1\0\1\76" +
                    "\2\5\1\77\1\5\1\100\1\101\6\5\1\102\6\5" +
                    "\1\103\3\5\1\104\1\5\1\105\3\5\1\106\6\5" +
                    "\1\107\5\5\1\110\2\5\1\111\2\5\1\112\1\113" +
                    "\1\114\4\5\1\115\1\5\1\116\2\5\1\117\1\5" +
                    "\1\120\1\121\1\5\1\122\13\5\1\123\1\5\1\124" +
                    "\1\125\2\5\1\126\2\5\1\127\1\5\1\130\1\131" +
                    "\5\5\1\132\1\5\1\133\2\5\1\134\3\5\1\135" +
                    "\1\136\3\5\1\137\4\5\1\140\1\5\1\141\1\142" +
                    "\2\5\1\143\1\144\1\5\1\145\4\5\1\146\1\147" +
                    "\1\5\1\150\2\5\1\151\1\5\1\152\1\153\1\5" +
                    "\1\154";

    private static int[] zzUnpackAction() {
        int[] result = new int[320];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 =
            "\0\0\0\107\0\216\0\107\0\325\0\u011c\0\u0163\0\u01aa" +
                    "\0\u01f1\0\u0238\0\u027f\0\u02c6\0\u030d\0\u0354\0\u039b\0\u03e2" +
                    "\0\u0429\0\u0470\0\u04b7\0\u04fe\0\u0545\0\u058c\0\u05d3\0\u061a" +
                    "\0\u0661\0\u06a8\0\u06ef\0\u0736\0\u077d\0\u07c4\0\u080b\0\u0852" +
                    "\0\u0899\0\u08e0\0\107\0\u0927\0\u096e\0\u09b5\0\107\0\107" +
                    "\0\107\0\107\0\107\0\107\0\107\0\107\0\107\0\107" +
                    "\0\u09fc\0\107\0\u0a43\0\u0a8a\0\107\0\107\0\u0ad1\0\107" +
                    "\0\107\0\107\0\u0b18\0\u01f1\0\107\0\u0238\0\u0238\0\u0b5f" +
                    "\0\u0ba6\0\u0bed\0\107\0\107\0\107\0\u0c34\0\u0c7b\0\u0cc2" +
                    "\0\u0d09\0\u0d50\0\u0d97\0\u0dde\0\u0e25\0\u0e6c\0\u0eb3\0\u0efa" +
                    "\0\u0f41\0\u0f88\0\u0fcf\0\u1016\0\u105d\0\u10a4\0\u10eb\0\u1132" +
                    "\0\u1179\0\u11c0\0\u1207\0\u124e\0\u1295\0\u12dc\0\u1323\0\u136a" +
                    "\0\u13b1\0\u0163\0\u13f8\0\u143f\0\u1486\0\u14cd\0\u1514\0\u155b" +
                    "\0\u15a2\0\u15e9\0\u1630\0\u1677\0\107\0\107\0\107\0\107" +
                    "\0\107\0\107\0\107\0\u16be\0\107\0\107\0\107\0\107" +
                    "\0\107\0\u1705\0\107\0\u174c\0\u1793\0\u17da\0\107\0\u1821" +
                    "\0\u1868\0\u18af\0\u18f6\0\u0163\0\u193d\0\u1984\0\u19cb\0\u1a12" +
                    "\0\u1a59\0\u1aa0\0\u1ae7\0\u1b2e\0\u0163\0\u1b75\0\u1bbc\0\u1c03" +
                    "\0\u1c4a\0\u1c91\0\u1cd8\0\u1d1f\0\u1d66\0\u1dad\0\u1df4\0\u1e3b" +
                    "\0\u0163\0\u1e82\0\u1ec9\0\u1f10\0\u1f57\0\u1f9e\0\u1fe5\0\u202c" +
                    "\0\u2073\0\u20ba\0\u2101\0\u2148\0\u218f\0\u21d6\0\u221d\0\u2264" +
                    "\0\u22ab\0\u22f2\0\u2339\0\u2380\0\u23c7\0\u240e\0\u2455\0\107" +
                    "\0\u249c\0\u174c\0\u24e3\0\u0163\0\u252a\0\u2571\0\u0163\0\u25b8" +
                    "\0\u0163\0\u0163\0\u25ff\0\u2646\0\u268d\0\u26d4\0\u271b\0\u2762" +
                    "\0\u0163\0\u27a9\0\u27f0\0\u2837\0\u287e\0\u28c5\0\u290c\0\u0163" +
                    "\0\u2953\0\u299a\0\u29e1\0\u0163\0\u2a28\0\u0163\0\u2a6f\0\u2ab6" +
                    "\0\u2afd\0\u0163\0\u2b44\0\u2b8b\0\u2bd2\0\u2c19\0\u2c60\0\u2ca7" +
                    "\0\u0163\0\u2cee\0\u2d35\0\u2d7c\0\u2dc3\0\u2e0a\0\u0163\0\u2e51" +
                    "\0\u2e98\0\u2edf\0\u2f26\0\u2f6d\0\u0163\0\u0163\0\u2fb4\0\u2ffb" +
                    "\0\u3042\0\u3089\0\u30d0\0\u0163\0\u3117\0\u0163\0\u315e\0\u31a5" +
                    "\0\u0163\0\u31ec\0\u0163\0\u0163\0\u3233\0\u0163\0\u327a\0\u32c1" +
                    "\0\u3308\0\u334f\0\u3396\0\u33dd\0\u3424\0\u346b\0\u34b2\0\u34f9" +
                    "\0\u3540\0\u0163\0\u3587\0\u0163\0\u0163\0\u35ce\0\u3615\0\u0163" +
                    "\0\u365c\0\u36a3\0\u0163\0\u36ea\0\u0163\0\u0163\0\u3731\0\u3778" +
                    "\0\u37bf\0\u3806\0\u384d\0\u0163\0\u3894\0\u0163\0\u38db\0\u3922" +
                    "\0\u0163\0\u3969\0\u39b0\0\u39f7\0\u0163\0\u0163\0\u3a3e\0\u3a85" +
                    "\0\u3acc\0\u0163\0\u3b13\0\u3b5a\0\u3ba1\0\u3be8\0\u0163\0\u3c2f" +
                    "\0\u0163\0\u0163\0\u3c76\0\u3cbd\0\u0163\0\u0163\0\u3d04\0\u0163" +
                    "\0\u3d4b\0\u3d92\0\u3dd9\0\u3e20\0\u0163\0\u0163\0\u3e67\0\u0163" +
                    "\0\u3eae\0\u3ef5\0\u0163\0\u3f3c\0\u0163\0\u0163\0\u3f83\0\u0163";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[320];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;  /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpackTrans();

    private static final String ZZ_TRANS_PACKED_0 =
            "\1\2\1\3\2\4\1\5\1\6\1\7\1\2\1\10" +
                    "\2\7\1\11\1\12\1\2\1\4\1\2\1\13\1\7" +
                    "\1\14\5\7\1\15\1\7\1\16\1\17\1\7\1\20" +
                    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\4\7" +
                    "\1\30\1\31\2\7\1\32\1\33\1\34\1\35\1\7" +
                    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45" +
                    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55" +
                    "\1\56\1\57\1\60\1\61\1\62\111\0\1\4\110\0" +
                    "\1\63\1\64\54\0\1\65\106\0\1\66\32\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\31\7\35\0\2\10" +
                    "\6\0\1\67\1\70\1\10\2\0\1\71\1\72\1\73" +
                    "\5\0\1\73\1\71\1\0\1\70\11\0\1\72\34\0" +
                    "\1\74\2\0\10\74\1\75\73\74\1\76\2\0\11\76" +
                    "\1\77\3\0\67\76\10\0\1\67\7\0\1\100\1\0" +
                    "\1\67\74\0\2\10\6\0\1\67\1\70\1\10\1\101" +
                    "\1\102\1\71\1\72\1\73\5\0\1\73\1\71\1\0" +
                    "\1\70\2\0\1\102\6\0\1\72\1\0\1\101\62\0" +
                    "\1\103\31\0\1\104\4\0\1\105\25\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\2\7\1\106\14\7\1\107" +
                    "\11\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\4\7\1\110\24\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\7\7\1\111\1\7\1\112\11\7\1\113" +
                    "\5\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\6\7\1\114\1\115\4\7\1\116\3\7\1\117\10\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\10\7" +
                    "\1\120\1\7\1\121\16\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\14\7\1\122\14\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\123\1\7" +
                    "\1\124\12\7\1\125\1\126\7\7\1\127\1\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\3\7\1\130" +
                    "\1\131\1\7\1\132\22\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\2\7\1\133\11\7\1\134\1\7" +
                    "\1\135\12\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\6\7\1\136\1\137\4\7\1\140\2\7\1\141" +
                    "\11\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\5\7\1\142\3\7\1\143\10\7\1\144\6\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\4\7\1\145" +
                    "\7\7\1\146\14\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\14\7\1\147\14\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\2\7\1\150\1\151\2\7" +
                    "\1\152\22\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\14\7\1\153\14\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\17\7\1\154\11\7\107\0\1\155" +
                    "\106\0\1\156\106\0\1\157\1\0\1\160\104\0\1\161" +
                    "\2\0\1\162\103\0\1\163\3\0\1\164\102\0\1\165" +
                    "\5\0\1\166\100\0\1\167\106\0\1\170\131\0\1\171" +
                    "\1\0\1\63\1\172\1\173\104\63\5\174\1\175\101\174" +
                    "\10\0\2\67\10\0\1\67\2\0\1\71\1\72\1\73" +
                    "\5\0\1\73\1\71\13\0\1\72\44\0\2\176\10\0" +
                    "\1\176\2\0\1\71\1\72\1\0\1\176\5\0\1\71" +
                    "\13\0\1\72\12\0\1\176\41\0\1\177\76\0\3\200" +
                    "\5\0\1\201\1\70\1\200\1\0\4\200\5\0\3\200" +
                    "\1\70\2\0\2\200\5\0\1\200\44\0\2\102\7\0" +
                    "\1\70\1\102\15\0\1\70\54\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\3\7\1\202\2\7\1\203\7\7" +
                    "\1\204\12\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\2\7\1\205\15\7\1\206\10\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\207\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\10\7" +
                    "\1\210\20\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\3\7\1\211\25\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\1\7\1\212\27\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\7\7\1\213\21\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\14\7" +
                    "\1\214\14\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\2\7\1\215\26\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\11\7\1\216\17\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\10\7\1\217\20\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\10\7" +
                    "\1\220\20\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\221\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\2\7\1\222\3\7\1\223\22\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\25\7" +
                    "\1\224\3\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\225\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\14\7\1\226\14\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\20\7\1\227\10\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\7\7" +
                    "\1\230\21\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\27\7\1\231\1\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\1\7\1\232\27\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\233\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\14\7" +
                    "\1\234\14\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\1\7\1\235\27\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\1\7\1\236\6\7\1\237\20\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\6\7" +
                    "\1\240\22\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\241\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\6\7\1\242\22\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\243\6\7" +
                    "\1\244\20\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\25\7\1\245\3\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\5\7\1\246\23\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\3\7\1\247\25\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\1\7" +
                    "\1\250\27\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\14\7\1\251\3\7\1\252\10\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\12\7\1\253\16\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\13\7" +
                    "\1\254\15\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\7\7\1\255\10\7\1\256\10\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\20\7\1\257\10\7" +
                    "\107\0\1\260\26\0\1\173\104\0\5\174\1\261\105\174" +
                    "\1\262\1\261\101\174\10\0\2\176\10\0\1\176\2\0" +
                    "\1\71\1\72\7\0\1\71\13\0\1\72\44\0\3\200" +
                    "\5\0\1\263\1\70\1\200\1\0\4\200\1\0\1\73" +
                    "\3\0\3\200\1\70\2\0\2\200\5\0\1\200\3\0" +
                    "\1\73\40\0\3\263\7\0\1\263\1\0\4\263\5\0" +
                    "\3\263\3\0\2\263\5\0\1\263\42\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\4\7\1\264\24\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\11\7\1\265" +
                    "\17\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\14\7\1\266\14\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\10\7\1\267\20\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\3\7\1\270\25\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\4\7\1\271" +
                    "\24\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\22\7\1\272\6\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\4\7\1\273\24\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\10\7\1\274\20\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\6\7\1\275" +
                    "\22\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\6\7\1\276\22\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\4\7\1\277\24\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\1\7\1\300\27\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\24\7\1\301" +
                    "\4\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\20\7\1\302\10\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\1\7\1\303\27\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\4\7\1\304\24\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\13\7\1\305" +
                    "\15\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\2\7\1\306\26\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\1\7\1\307\27\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\7\7\1\310\21\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\20\7\1\311" +
                    "\10\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\6\7\1\312\22\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\7\7\1\313\21\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\4\7\1\314\24\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\13\7\1\315" +
                    "\15\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\4\7\1\316\24\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\10\7\1\317\20\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\1\7\1\320\6\7\1\321" +
                    "\20\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\2\7\1\322\26\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\4\7\1\323\24\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\1\7\1\324\27\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\7\7\1\325" +
                    "\4\7\1\326\14\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\6\7\1\327\22\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\12\7\1\330\16\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\14\7\1\331" +
                    "\14\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\1\7\1\332\27\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\26\7\1\333\2\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\7\7\1\334\21\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\15\7\1\335" +
                    "\13\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\6\7\1\336\22\7\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\21\7\1\337\7\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\7\7\1\340\21\7\25\0" +
                    "\4\174\1\173\1\261\101\174\10\0\3\263\7\0\1\263" +
                    "\1\0\4\263\1\0\1\73\3\0\3\263\3\0\2\263" +
                    "\5\0\1\263\3\0\1\73\36\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\10\7\1\341\20\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\27\7\1\342\1\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\2\7" +
                    "\1\343\26\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\344\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\4\7\1\345\24\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\346\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\7\7" +
                    "\1\347\21\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\2\7\1\350\26\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\2\7\1\351\26\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\13\7\1\352\15\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\20\7" +
                    "\1\353\10\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\2\7\1\354\26\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\17\7\1\355\11\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\356\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\13\7" +
                    "\1\357\15\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\26\7\1\360\2\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\15\7\1\361\13\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\362\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\17\7" +
                    "\1\363\11\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\10\7\1\364\20\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\20\7\1\365\10\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\366\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\2\7" +
                    "\1\367\26\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\6\7\1\370\22\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\4\7\1\371\24\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\2\7\1\372\26\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\3\7" +
                    "\1\373\25\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\7\7\1\374\21\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\4\7\1\375\24\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\6\7\1\376\22\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\20\7" +
                    "\1\377\10\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\6\7\1\u0100\22\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\1\7\1\u0101\27\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u0102\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\20\7" +
                    "\1\u0103\10\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\10\7\1\u0104\20\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\11\7\1\u0105\17\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\21\7\1\u0106\7\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\7\7" +
                    "\1\u0107\21\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\1\7\1\u0108\27\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\6\7\1\u0109\22\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\u010a\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\13\7" +
                    "\1\u010b\15\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\2\7\1\u010c\26\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\17\7\1\u010d\11\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u010e\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\6\7" +
                    "\1\u010f\22\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\u0110\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\5\7\1\u0111\23\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\11\7\1\u0112\17\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\22\7" +
                    "\1\u0113\6\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\1\7\1\u0114\27\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\7\7\1\u0115\21\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u0116\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\13\7" +
                    "\1\u0117\15\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\1\7\1\u0118\27\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\13\7\1\u0119\15\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\24\7\1\u011a\4\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\20\7" +
                    "\1\u011b\10\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\4\7\1\u011c\24\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\10\7\1\u011d\20\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\16\7\1\u011e\12\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\13\7" +
                    "\1\u011f\15\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\5\7\1\u0120\23\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\14\7\1\u0121\14\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\11\7\1\u0122\17\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\3\7" +
                    "\1\u0123\25\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\6\7\1\u0124\22\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\13\7\1\u0125\15\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u0126\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\1\7" +
                    "\1\u0127\27\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\1\7\1\u0128\27\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\4\7\1\u0129\24\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u012a\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\7\7" +
                    "\1\u012b\21\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\11\7\1\u012c\17\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\1\7\1\u012d\27\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\25\7\1\u012e\3\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\11\7" +
                    "\1\u012f\17\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\4\7\1\u0130\24\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\13\7\1\u0131\15\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\4\7\1\u0132\24\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\11\7" +
                    "\1\u0133\17\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\4\7\1\u0134\24\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\4\7\1\u0135\24\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\u0136\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\20\7" +
                    "\1\u0137\10\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\4\7\1\u0138\24\7\33\0\5\7\4\0\1\7" +
                    "\1\0\7\7\1\0\14\7\1\u0139\14\7\33\0\5\7" +
                    "\4\0\1\7\1\0\7\7\1\0\1\7\1\u013a\27\7" +
                    "\33\0\5\7\4\0\1\7\1\0\7\7\1\0\21\7" +
                    "\1\u013b\7\7\33\0\5\7\4\0\1\7\1\0\7\7" +
                    "\1\0\30\7\1\u013c\33\0\5\7\4\0\1\7\1\0" +
                    "\7\7\1\0\5\7\1\u013d\23\7\33\0\5\7\4\0" +
                    "\1\7\1\0\7\7\1\0\10\7\1\u013e\20\7\33\0" +
                    "\5\7\4\0\1\7\1\0\7\7\1\0\4\7\1\u013f" +
                    "\24\7\33\0\5\7\4\0\1\7\1\0\7\7\1\0" +
                    "\21\7\1\u0140\7\7\25\0";

    private static int[] zzUnpackTrans() {
        int[] result = new int[16330];
        int offset = 0;
        offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;

    /* error messages for the codes above */
    private static final String ZZ_ERROR_MSG[] = {
            "Unknown internal scanner error",
            "Error: could not match input",
            "Error: pushback value was too large"
    };

    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 =
            "\1\0\1\11\1\1\1\11\36\1\1\11\3\1\12\11" +
                    "\1\1\1\11\1\1\1\0\2\11\1\1\3\11\1\1" +
                    "\1\0\1\11\1\0\1\1\1\0\2\1\3\11\47\1" +
                    "\7\11\1\1\5\11\1\1\1\11\2\0\1\1\1\11" +
                    "\1\1\1\0\56\1\1\11\1\0\1\1\1\0\215\1";

    private static int[] zzUnpackAttribute() {
        int[] result = new int[320];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /**
     * the input device
     */
    private java.io.Reader zzReader;

    /**
     * the current state of the DFA
     */
    private int zzState;

    /**
     * the current lexical state
     */
    private int zzLexicalState = YYINITIAL;

    /**
     * this buffer contains the current text to be matched and is
     * the source of the yytext() string
     */
    private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

    /**
     * the textposition at the last accepting state
     */
    private int zzMarkedPos;

    /**
     * the current text position in the buffer
     */
    private int zzCurrentPos;

    /**
     * startRead marks the beginning of the yytext() string in the buffer
     */
    private int zzStartRead;

    /**
     * endRead marks the last character in the buffer, that has been read
     * from input
     */
    private int zzEndRead;

    /**
     * number of newlines encountered up to the start of the matched text
     */
    private int yyline;

    /**
     * the number of characters up to the start of the matched text
     */
    private int yychar;

    /**
     * the number of characters from the last newline up to the start of the
     * matched text
     */
    private int yycolumn;

    /**
     * zzAtBOL == true iff the scanner is currently at the beginning of a line
     */
    private boolean zzAtBOL = true;

    /**
     * zzAtEOF == true iff the scanner is at the EOF
     */
    private boolean zzAtEOF;

    /**
     * denotes if the user-EOF-code has already been executed
     */
    private boolean zzEOFDone;

    /**
     * The number of occupied positions in zzBuffer beyond zzEndRead.
     * When a lead/high surrogate has been read from the input stream
     * into the final zzBuffer position, this will have a value of 1;
     * otherwise, it will have a value of 0.
     */
    private int zzFinalHighSurrogate = 0;

    /* user code: */

    public int getPosition() {
        return zzCurrentPos;
    }

    public void goTo(int offset) {
        zzCurrentPos = zzMarkedPos = zzStartRead = offset;
        zzAtEOF = false;
    }


    /**
     * Creates a new scanner
     *
     * @param in the java.io.Reader to read input from.
     */
    public JavaLexer(java.io.Reader in) {
        this.zzReader = in;
    }


    /**
     * Unpacks the compressed character translation table.
     *
     * @param packed the packed character translation table
     * @return the unpacked character translation table
     */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x110000];
        int i = 0;  /* index in packed string  */
        int j = 0;  /* index in unpacked array */
        while (i < 3476) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do map[j++] = value; while (--count > 0);
        }
        return map;
    }


    /**
     * Refills the input buffer.
     *
     * @return <code>false</code>, iff there was new input.
     * @throws java.io.IOException if any I/O-Error occurs
     */
    private boolean zzRefill() throws java.io.IOException {

        /* first: make room (if you can) */
        if (zzStartRead > 0) {
            zzEndRead += zzFinalHighSurrogate;
            zzFinalHighSurrogate = 0;
            System.arraycopy(zzBuffer, zzStartRead,
                    zzBuffer, 0,
                    zzEndRead - zzStartRead);

            /* translate stored positions */
            zzEndRead -= zzStartRead;
            zzCurrentPos -= zzStartRead;
            zzMarkedPos -= zzStartRead;
            zzStartRead = 0;
        }

        /* is the buffer big enough? */
        if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
            /* if not: blow it up */
            char newBuffer[] = new char[zzBuffer.length * 2];
            System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
            zzBuffer = newBuffer;
            zzEndRead += zzFinalHighSurrogate;
            zzFinalHighSurrogate = 0;
        }

        /* fill the buffer with new input */
        int requested = zzBuffer.length - zzEndRead;
        int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

        /* not supposed to occur according to specification of java.io.Reader */
        if (numRead == 0) {
            throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
        }
        if (numRead > 0) {
            zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
            if (numRead == requested) {
                if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
                    --zzEndRead;
                    zzFinalHighSurrogate = 1;
                }
            }
            /* potentially more input available */
            return false;
        }

        /* numRead < 0 ==> end of stream */
        return true;
    }


    /**
     * Closes the input stream.
     */
    public final void yyclose() throws java.io.IOException {
        zzAtEOF = true;            /* indicate end of file */
        zzEndRead = zzStartRead;  /* invalidate buffer    */

        if (zzReader != null)
            zzReader.close();
    }


    /**
     * Resets the scanner to read from a new input stream.
     * Does not close the old reader.
     * <p>
     * All internal variables are reset, the old input stream
     * <b>cannot</b> be reused (internal buffer is discarded and lost).
     * Lexical state is set to <tt>ZZ_INITIAL</tt>.
     * <p>
     * Internal scan buffer is resized down to its initial length, if it has grown.
     *
     * @param reader the new input stream
     */
    public final void yyreset(java.io.Reader reader) {
        zzReader = reader;
        zzAtBOL = true;
        zzAtEOF = false;
        zzEOFDone = false;
        zzEndRead = zzStartRead = 0;
        zzCurrentPos = zzMarkedPos = 0;
        zzFinalHighSurrogate = 0;
        yyline = yychar = yycolumn = 0;
        zzLexicalState = YYINITIAL;
        if (zzBuffer.length > ZZ_BUFFERSIZE)
            zzBuffer = new char[ZZ_BUFFERSIZE];
    }


    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }


    /**
     * Enters a new lexical state
     *
     * @param newState the new lexical state
     */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }


    /**
     * Returns the text matched by the current regular expression.
     */
    public final String yytext() {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }


    /**
     * Returns the character at position <tt>pos</tt> from the
     * matched text.
     * <p>
     * It is equivalent to yytext().charAt(pos), but faster
     *
     * @param pos the position of the character to fetch.
     *            A value from 0 to yylength()-1.
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBuffer[zzStartRead + pos];
    }


    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }


    /**
     * Reports an error that occured while scanning.
     * <p>
     * In a wellformed scanner (no or only correct usage of
     * yypushback(int) and a match-all fallback rule) this method
     * will only be called with things that "Can't Possibly Happen".
     * If this method is called, something is seriously wrong
     * (e.g. a JFlex bug producing a faulty scanner etc.).
     * <p>
     * Usual syntax/scanner level error handling should be done
     * in error fallback rules.
     *
     * @param errorCode the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }


    /**
     * Pushes the specified amount of characters back into the input stream.
     * <p>
     * They will be read again by then next call of the scanning method
     *
     * @param number the number of characters to be read again.
     *               This number must not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }


    /**
     * Resumes scanning until the next regular expression is matched,
     * the end of input is encountered or an I/O-Error occurs.
     *
     * @return the next token
     * @throws java.io.IOException if any I/O-Error occurs
     */


}
